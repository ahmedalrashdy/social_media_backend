# Generated by Django 5.2 on 2025-04-09 18:03

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('name', models.CharField(blank=True, default='', help_text='ادخل اسمك الكامل (اختياري)', max_length=255, verbose_name='الاسم الكامل')),
                ('email', models.EmailField(db_index=True, error_messages={'unique': 'هذا البريد الإلكتروني مسجل مسبقًا.'}, max_length=254, unique=True, verbose_name='البريد الإلكتروني')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الانضمام')),
                ('last_login', models.DateTimeField(auto_now=True, verbose_name='آخر تسجيل دخول')),
                ('is_staff', models.BooleanField(default=False, help_text='يحدد ما إذا كان المستخدم يمكنه الوصول لوحة الإدارة.', verbose_name='عضو فريق العمل')),
                ('is_active', models.BooleanField(default=True, help_text='يحدد ما إذا كان الحساب مفعلاً. يمكنك إلغاء التفعيل بدل الحذف.', verbose_name='نشط')),
                ('verified', models.BooleanField(default=False, help_text='يحدد ما إذا كان البريد الإلكتروني تم التحقق منه.', verbose_name='تم التحقق')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'مستخدم',
                'verbose_name_plural': 'المستخدمون',
                'ordering': ['-date_joined'],
                'indexes': [models.Index(fields=['email'], name='accounts_us_email_74c8d6_idx'), models.Index(fields=['date_joined'], name='accounts_us_date_jo_ff39bb_idx')],
            },
        ),
    ]
